#include <iostream>
#include <vector>
#include <unordered_map>
#include <string>
#include <format>

class SortingTester {
    std::vector<std::vector<int>> random_vectors = {
        {42},
        {17, 82},
        {73, 25, 91},
        {45, 12, 89, 34},
        {67, 23, 91, 45, 12},
        {34, 78, 15, 90, 45, 22},
        {89, 34, 56, 12, 78, 45, 23},
        {45, 89, 23, 67, 12, 90, 34, 56},
        {12, 45, 78, 34, 90, 23, 67, 56, 89},
        {34, 78, 90, 23, 56, 12, 45, 89, 67, 11},
        {23, 45, 67, 89, 12, 34, 56, 78, 90, 11, 22},
        {45, 67, 89, 12, 34, 56, 78, 90, 11, 23, 45, 88},
        {67, 89, 12, 34, 56, 78, 90, 11, 23, 45, 67, 88, 99},
        {89, 12, 34, 56, 78, 90, 11, 23, 45, 67, 88, 99, 13, 24},
        {12, 34, 56, 78, 90, 11, 23, 45, 67, 88, 99, 13, 24, 35, 46},
        {34, 56, 78, 90, 11, 23, 45, 67, 88, 99, 13, 24, 35, 46, 57, 68},
        {56, 78, 90, 11, 23, 45, 67, 88, 99, 13, 24, 35, 46, 57, 68, 79, 80},
        {78, 90, 11, 23, 45, 67, 88, 99, 13, 24, 35, 46, 57, 68, 79, 80, 91, 12},
        {90, 11, 23, 45, 67, 88, 99, 13, 24, 35, 46, 57, 68, 79, 80, 91, 12, 34, 55},
        {11, 23, 45, 67, 88, 99, 13, 24, 35, 46, 57, 68, 79, 80, 91, 12, 34, 55, 66, 77},
        {23, 45, 67, 88, 99, 13, 24, 35, 46, 57, 68, 79, 80, 91, 12, 34, 55, 66, 77, 88, 89},
        {45, 67, 88, 99, 13, 24, 35, 46, 57, 68, 79, 80, 91, 12, 34, 55, 66, 77, 88, 89, 90, 91},
        {67, 88, 99, 13, 24, 35, 46, 57, 68, 79, 80, 91, 12, 34, 55, 66, 77, 88, 89, 90, 91, 92, 93},
        {88, 99, 13, 24, 35, 46, 57, 68, 79, 80, 91, 12, 34, 55, 66, 77, 88, 89, 90, 91, 92, 93, 94, 95},
        {99, 13, 24, 35, 46, 57, 68, 79, 80, 91, 12, 34, 55, 66, 77, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97},
        {13, 24, 35, 46, 57, 68, 79, 80, 91, 12, 34, 55, 66, 77, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99},
        {24, 35, 46, 57, 68, 79, 80, 91, 12, 34, 55, 66, 77, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 11, 22},
        {35, 46, 57, 68, 79, 80, 91, 12, 34, 55, 66, 77, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 11, 22, 33, 44},
        {46, 57, 68, 79, 80, 91, 12, 34, 55, 66, 77, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 11, 22, 33, 44, 55, 66},
        {57, 68, 79, 80, 91, 12, 34, 55, 66, 77, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 11, 22, 33, 44, 55, 66, 77, 88}
    };
    std::vector<std::vector<int>> sorted_vectors = {
        {1},
        {1, 2},
        {1, 2, 3},
        {1, 2, 3, 4},
        {1, 2, 3, 4, 5},
        {1, 2, 3, 4, 5, 6},
        {1, 2, 3, 4, 5, 6, 7},
        {1, 2, 3, 4, 5, 6, 7, 8},
        {1, 2, 3, 4, 5, 6, 7, 8, 9},
        {1, 2, 3, 4, 5, 6, 7, 8, 9, 10},
        {1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11},
        {1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12},
        {1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13},
        {1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14},
        {1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15},
        {1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16},
        {1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17},
        {1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18},
        {1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19},
        {1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20},
        {1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21},
        {1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22},
        {1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23},
        {1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24},
        {1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25},
        {1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26},
        {1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27},
        {1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28},
        {1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29},
        {1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30}
    };
    std::vector<std::vector<int>> inverse_sorted_vectors = {
        {30},
        {30, 29},
        {30, 29, 28},
        {30, 29, 28, 27},
        {30, 29, 28, 27, 26},
        {30, 29, 28, 27, 26, 25},
        {30, 29, 28, 27, 26, 25, 24},
        {30, 29, 28, 27, 26, 25, 24, 23},
        {30, 29, 28, 27, 26, 25, 24, 23, 22},
        {30, 29, 28, 27, 26, 25, 24, 23, 22, 21},
        {30, 29, 28, 27, 26, 25, 24, 23, 22, 21, 20},
        {30, 29, 28, 27, 26, 25, 24, 23, 22, 21, 20, 19},
        {30, 29, 28, 27, 26, 25, 24, 23, 22, 21, 20, 19, 18},
        {30, 29, 28, 27, 26, 25, 24, 23, 22, 21, 20, 19, 18, 17},
        {30, 29, 28, 27, 26, 25, 24, 23, 22, 21, 20, 19, 18, 17, 16},
        {30, 29, 28, 27, 26, 25, 24, 23, 22, 21, 20, 19, 18, 17, 16, 15},
        {30, 29, 28, 27, 26, 25, 24, 23, 22, 21, 20, 19, 18, 17, 16, 15, 14},
        {30, 29, 28, 27, 26, 25, 24, 23, 22, 21, 20, 19, 18, 17, 16, 15, 14, 13},
        {30, 29, 28, 27, 26, 25, 24, 23, 22, 21, 20, 19, 18, 17, 16, 15, 14, 13, 12},
        {30, 29, 28, 27, 26, 25, 24, 23, 22, 21, 20, 19, 18, 17, 16, 15, 14, 13, 12, 11},
        {30, 29, 28, 27, 26, 25, 24, 23, 22, 21, 20, 19, 18, 17, 16, 15, 14, 13, 12, 11, 10},
        {30, 29, 28, 27, 26, 25, 24, 23, 22, 21, 20, 19, 18, 17, 16, 15, 14, 13, 12, 11, 10, 9},
        {30, 29, 28, 27, 26, 25, 24, 23, 22, 21, 20, 19, 18, 17, 16, 15, 14, 13, 12, 11, 10, 9, 8},
        {30, 29, 28, 27, 26, 25, 24, 23, 22, 21, 20, 19, 18, 17, 16, 15, 14, 13, 12, 11, 10, 9, 8, 7},
        {30, 29, 28, 27, 26, 25, 24, 23, 22, 21, 20, 19, 18, 17, 16, 15, 14, 13, 12, 11, 10, 9, 8, 7, 6},
        {30, 29, 28, 27, 26, 25, 24, 23, 22, 21, 20, 19, 18, 17, 16, 15, 14, 13, 12, 11, 10, 9, 8, 7, 6, 5},
        {30, 29, 28, 27, 26, 25, 24, 23, 22, 21, 20, 19, 18, 17, 16, 15, 14, 13, 12, 11, 10, 9, 8, 7, 6, 5, 4},
        {30, 29, 28, 27, 26, 25, 24, 23, 22, 21, 20, 19, 18, 17, 16, 15, 14, 13, 12, 11, 10, 9, 8, 7, 6, 5, 4, 3},
        {30, 29, 28, 27, 26, 25, 24, 23, 22, 21, 20, 19, 18, 17, 16, 15, 14, 13, 12, 11, 10, 9, 8, 7, 6, 5, 4, 3, 2},
        {30, 29, 28, 27, 26, 25, 24, 23, 22, 21, 20, 19, 18, 17, 16, 15, 14, 13, 12, 11, 10, 9, 8, 7, 6, 5, 4, 3, 2, 1}
    };
    int** randomArrays = new int* [30];
    int** sortedArrays = new int* [30];
    int** inverseSortedArrays = new int* [30];
    std::pair<int, double>(*sortingAlgorithm)(int*, int);

public:
    std::unordered_map<int, std::pair<int, double>> random_moves;
    std::unordered_map<int, std::pair<int, double>> sorted_moves;
    std::unordered_map<int, std::pair<int, double>> inverse_sorted_moves;
    enum TEST_TYPE {
        RANDOM_ARRAY,
        SORTED_ARRAY,
        INVERSE_SORTED_ARRAY
    };

    SortingTester(std::pair<int, double>(*sorting_algorithm)(int*, int));
    ~SortingTester();
    void test_comparisons();

    template <TEST_TYPE type>
    std::string array_to_string(int idx) {
        std::string output = "";
        switch (type) {
            case SortingTester::RANDOM_ARRAY:
                output +=  std::format("arr[{}]", random_vectors[idx].size()) + "{";
                for (int i = 0; i < random_vectors[idx].size(); i++) {
                    output += std::to_string(random_vectors[idx][i]) + (idx == i ? "" : ", ");
                }
                output += "}";
                break;
            case SortingTester::SORTED_ARRAY:
                output += std::format("arr[{}]", sorted_vectors[idx].size()) + "{";
                for (int i = 0; i < sorted_vectors[idx].size(); i++) {
                    output += std::to_string(sorted_vectors[idx][i]) + (idx == i ? "" : ", ");
                }
                output += "}";
                break;
            case SortingTester::INVERSE_SORTED_ARRAY:
                output += std::format("arr[{}]", inverse_sorted_vectors[idx].size()) + "{";
                for (int i = 0; i < inverse_sorted_vectors[idx].size(); i++) {
                    output += std::to_string(inverse_sorted_vectors[idx][i]) + (idx == i ? "" : ", ");
                }
                output += "}";
                break;
            default:
                break;
        }
        return output;
    }

};